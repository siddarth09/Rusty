# Maximum range sensor reading in meters that results in an obstacle being placed in the costmap
obstacle_range: 6.0

# Outside of this range is considered free space
raytrace_range: 15.0

# Footprint of the robot with (0,0) being the center (in meters)
footprint: [[0.250, 0.300], [-0.250, 0.300], [-0.250, -0.300], [0.250, -0.300]]

# The static map created using SLAM is being published to this topic
map_topic: /map

# Global reference frame for the costmaps
global_frame: map

# Base frame of the robot
robot_base_frame: base_link

# Frequency in Hz for the costmap to be updated
update_frequency: 5.0

# Frequency in Hz for the costmap to publish display information
publish_frequency: 5.0

# Delay in transform tf data that is tolerable in seconds
transform_tolerance: 0.2

# Width of the map in meters
width: 75

# Height of the map in meters
height: 75

rolling_window: true

subscribe_to_updates: true

# Each costmap is layered
plugins:
  - {name: static_layer, type: "costmap_2d::StaticLayer"}
  - {name: obstacle_layer, type: "costmap_2d::ObstacleLayer"}
  - {name: inflation_layer, type: "costmap_2d::InflationLayer"}

# Map layer built with SLAM
static_layer:
  map_topic: /map
  subscribe_to_updates: false

# Map layer that contains information about the obstacles in the environment as detected by LIDAR
obstacle_layer:
  observation_sources: laser_scan_sensor
  laser_scan_sensor: {sensor_frame: laser_link, data_type: LaserScan, topic: scan, marking: true, clearing: true}

# Map layer that adds a cushion in meters around obstacles
inflation_layer:
  inflation_radius: 1.5
